apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.2
    helm.sh/chart: loki-distributed-0.78.2
  name: loki-query-frontend
  namespace: syn-loki
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 9554f22ab36946682e930a0daeffeaa2a634d44f83e9b3919bc22631f1afc385
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: query-frontend
                    app.kubernetes.io/instance: loki
                    app.kubernetes.io/name: loki-distributed
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=query-frontend
          image: docker.io/grafana/loki:2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          name: query-frontend
          ports:
            - containerPort: 3100
              name: http
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: http-memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/loki/config
              name: config
            - mountPath: /var/loki-distributed-runtime
              name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: loki
          name: config
        - configMap:
            name: loki-runtime
          name: runtime-config
